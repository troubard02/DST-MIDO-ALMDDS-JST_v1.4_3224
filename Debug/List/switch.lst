###############################################################################
#
# IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR       11/Jun/2021  12:51:10
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c
#    Command line =  
#        -f C:\Users\troub\AppData\Local\Temp\EW23C0.tmp
#        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c"
#        --cpu=m168pa -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1.
#        Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj"
#        -lC "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List" -lA
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug -e -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\min_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\atmel_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\" --eeprom_size 512
#        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
#    Locale       =  Korean_KOR.949
#    List file    =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List\switch.lst
#    Object file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj\switch.r90
#
###############################################################################

C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c
      1          #include "include.h"

   \                                 In  segment ABSOLUTE, at 0x23
   \   union <unnamed> volatile __io _A_PINB
   \                     _A_PINB:
   \   00000000                      DS8 1
      2          
      3          
      4          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      5          uint8_t Start_Switch_State, Start_Port_Value;
   \                     Start_Switch_State:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Start_Port_Value:
   \   00000000                      DS8 1
      6          
      7          
      8          //#if MCU_TYPE
      9          
     10          #define PORT_START_SWITCH 0x10 // PB4 
     11          
     12          
     13          //#else 
     14          
     15          
     16          //#define PORT_START_SWITCH 0x10 // PB4 
     17          
     18          //#endif
     19          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     20          uint8_t Switch_Hold_Timer_Reg;
   \                     Switch_Hold_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     21          uint16_t Switch_Hold_Timer_Cnt;
   \                     Switch_Hold_Timer_Cnt:
   \   00000000                      DS8 2
     22          
     23          
     24          
     25          
     26          
     27          /*! \brief Switch_Get_Delay() rutine
     28           *   to prohibit chattering comfirm value one more time
     29           *   KEY_INIT_STATE : NO VALUE
     30           *   KEY_READY_STATE : Get Value
     31           *   KEY_COMPLETE_STATE : Comfirm Value 
     32           */

   \                                 In  segment CODE, align 2, keep-with-next
     33          uint8_t Switch_Hold_Get_Delay(uint8_t Key_Mask_Unit,// PIN MAP
   \                     Switch_Hold_Get_Delay:
     34                                            uint8_t Key_Value, // current Pin Value
     35                                            uint8_t Key_State) // Switch_x_State
     36          {
     37          
     38            if((Key_Value&Key_Mask_Unit)!=Key_Mask_Unit)// if input Key value
   \   00000000   2310               AND     R17, R16
   \   00000002   1710               CP      R17, R16
   \   00000004   F091               BREQ    ??Switch_Hold_Get_Delay_0
     39            {
     40              switch (Key_State){
   \   00000006   2F02               MOV     R16, R18
   \   00000008   5000               SUBI    R16, 0
   \   0000000A   F039               BREQ    ??Switch_Hold_Get_Delay_1
   \   0000000C   5002               SUBI    R16, 2
   \   0000000E   F0F1               BREQ    ??Switch_Hold_Get_Delay_2
   \   00000010   5003               SUBI    R16, 3
   \   00000012   F029               BREQ    ??Switch_Hold_Get_Delay_3
   \   00000014   950A               DEC     R16
   \   00000016   F029               BREQ    ??Switch_Hold_Get_Delay_4
   \   00000018   C006               RJMP    ??Switch_Hold_Get_Delay_5
     41              case KEY_INIT_STATE: Key_State=KEY_HIGH_READY_STATE; break;
   \                     ??Switch_Hold_Get_Delay_1:
   \   0000001A   E025               LDI     R18, 5
   \   0000001C   C017               RJMP    ??Switch_Hold_Get_Delay_2
     42              case KEY_HIGH_READY_STATE: Key_State=KEY_COMPLETE_STATE; break;
   \                     ??Switch_Hold_Get_Delay_3:
   \   0000001E   E022               LDI     R18, 2
   \   00000020   C015               RJMP    ??Switch_Hold_Get_Delay_2
     43              case KEY_COMPLETE_STATE: break;// Key Input Complete
     44              case KEY_LOW_READY_STATE : Key_State=KEY_COMPLETE_STATE; break;
   \                     ??Switch_Hold_Get_Delay_4:
   \   00000022   E022               LDI     R18, 2
   \   00000024   C013               RJMP    ??Switch_Hold_Get_Delay_2
     45              default :
     46                Key_State=KEY_INIT_STATE;
   \                     ??Switch_Hold_Get_Delay_5:
   \   00000026   E020               LDI     R18, 0
     47                break;
   \   00000028   C011               RJMP    ??Switch_Hold_Get_Delay_2
     48              }
     49            }
     50            else { // if no any key value
     51              switch (Key_State){
   \                     ??Switch_Hold_Get_Delay_0:
   \   0000002A   2F02               MOV     R16, R18
   \   0000002C   5000               SUBI    R16, 0
   \   0000002E   F071               BREQ    ??Switch_Hold_Get_Delay_2
   \   00000030   5002               SUBI    R16, 2
   \   00000032   F039               BREQ    ??Switch_Hold_Get_Delay_6
   \   00000034   5003               SUBI    R16, 3
   \   00000036   F019               BREQ    ??Switch_Hold_Get_Delay_7
   \   00000038   950A               DEC     R16
   \   0000003A   F029               BREQ    ??Switch_Hold_Get_Delay_8
   \   0000003C   C006               RJMP    ??Switch_Hold_Get_Delay_9
     52              case KEY_INIT_STATE:  break;
     53              case KEY_HIGH_READY_STATE: Key_State=KEY_INIT_STATE; break;
   \                     ??Switch_Hold_Get_Delay_7:
   \   0000003E   E020               LDI     R18, 0
   \   00000040   C005               RJMP    ??Switch_Hold_Get_Delay_2
     54              case KEY_COMPLETE_STATE: Key_State=KEY_LOW_READY_STATE; break;// Key Input Complete
   \                     ??Switch_Hold_Get_Delay_6:
   \   00000042   E026               LDI     R18, 6
   \   00000044   C003               RJMP    ??Switch_Hold_Get_Delay_2
     55              case KEY_LOW_READY_STATE : Key_State=KEY_INIT_STATE; break;
   \                     ??Switch_Hold_Get_Delay_8:
   \   00000046   E020               LDI     R18, 0
   \   00000048   C001               RJMP    ??Switch_Hold_Get_Delay_2
     56              default :
     57                Key_State=KEY_INIT_STATE;
   \                     ??Switch_Hold_Get_Delay_9:
   \   0000004A   E020               LDI     R18, 0
     58                break;
     59              }
     60          
     61          
     62            } 
     63          
     64            return Key_State;
   \                     ??Switch_Hold_Get_Delay_2:
   \   0000004C   2F02               MOV     R16, R18
   \   0000004E   9508               RET
     65          }
     66            
     67          

   \                                 In  segment CODE, align 2, keep-with-next
     68          void Switch_Start_Check(void)
   \                     Switch_Start_Check:
     69          {
     70            Start_Port_Value = (PINB&PORT_START_SWITCH);
   \   00000000   B103               IN      R16, 0x03
   \   00000002   7100               ANDI    R16, 0x10
   \   00000004   9300....           STS     Start_Port_Value, R16
     71            Start_Switch_State = Switch_Hold_Get_Delay(PORT_START_SWITCH,
     72                                                      Start_Port_Value,
     73                                                      Start_Switch_State);
   \   00000008   9120....           LDS     R18, Start_Switch_State
   \   0000000C   9110....           LDS     R17, Start_Port_Value
   \   00000010   E100               LDI     R16, 16
   \   00000012   ....               RCALL   Switch_Hold_Get_Delay
   \   00000014   9300....           STS     Start_Switch_State, R16
     74          }
   \   00000018   9508               RET
   \   0000001A                      REQUIRE _A_PINB
     75          

   \                                 In  segment CODE, align 2, keep-with-next
     76          void Switch_Timer(void)
   \                     Switch_Timer:
     77          {
     78          
     79            Switch_Hold_Timer_Cnt++;
   \   00000000   ....               LDI     R30, LOW(Switch_Hold_Timer_Cnt)
   \   00000002   ....               LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   8111               LDD     R17, Z+1
   \   00000008   5F0F               SUBI    R16, 255
   \   0000000A   4F1F               SBCI    R17, 255
   \   0000000C   8300               ST      Z, R16
   \   0000000E   8311               STD     Z+1, R17
     80            if(Switch_Hold_Timer_Cnt>1000){ // 1000x0.1ms = 100ms
   \   00000010   ....               LDI     R30, LOW(Switch_Hold_Timer_Cnt)
   \   00000012   ....               LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
   \   00000014   8100               LD      R16, Z
   \   00000016   8111               LDD     R17, Z+1
   \   00000018   3E09               CPI     R16, 233
   \   0000001A   E023               LDI     R18, 3
   \   0000001C   0712               CPC     R17, R18
   \   0000001E   F038               BRCS    ??Switch_Timer_0
     81              Switch_Hold_Timer_Cnt=0;
   \   00000020   ....               LDI     R30, LOW(Switch_Hold_Timer_Cnt)
   \   00000022   ....               LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
   \   00000024   E000               LDI     R16, 0
   \   00000026   8300               ST      Z, R16
   \   00000028   E000               LDI     R16, 0
   \   0000002A   8301               STD     Z+1, R16
     82              Switch_Start_Check();
   \   0000002C   ....               RCALL   Switch_Start_Check
     83            }
     84          
     85          
     86            /*
     87            if(Start_Switch_State==KEY_COMPLETE_STATE)// �⵿ ��ȣ�� ������ 
     88              System_Mode=S_Run_Mode;
     89            else System_Mode=S_Stop_Mode; // �⵿ ��ȣ�� ������ 
     90          */
     91          }
   \                     ??Switch_Timer_0:
   \   0000002E   9508               RET
     92          

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   Switch_Hold_Get_Delay
      2   Switch_Start_Check
        2   -> Switch_Hold_Get_Delay
      2   Switch_Timer
        2   -> Switch_Start_Check


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  Start_Port_Value
       1  Start_Switch_State
      80  Switch_Hold_Get_Delay
       2  Switch_Hold_Timer_Cnt
       1  Switch_Hold_Timer_Reg
      26  Switch_Start_Check
      48  Switch_Timer
       1  _A_PINB
       6  -- Other

 
   1 byte  in segment ABSOLUTE
 154 bytes in segment CODE
   6 bytes in segment INITTAB
   5 bytes in segment NEAR_Z
 
 154 bytes of CODE memory (+ 6 bytes shared)
   5 bytes of DATA memory (+ 1 byte  shared)

Errors: none
Warnings: none
