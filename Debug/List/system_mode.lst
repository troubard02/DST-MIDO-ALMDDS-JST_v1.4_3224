###############################################################################
#
# IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR       29/Dec/2020  21:04:16
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\system_mode.c
#    Command line =  
#        -f C:\Users\troub\AppData\Local\Temp\EWD733.tmp
#        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\system_mode.c" --cpu=m168pa
#        -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Debug\Obj" -lC
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Debug\List" -lA
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Debug\List"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug -e -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\drivers\min_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\drivers\atmel_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\" --eeprom_size 512 --dlib
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
#    Locale       =  Korean_KOR.949
#    List file    =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Debug\List\system_mode.lst
#    Object file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Debug\Obj\system_mode.r90
#
###############################################################################

C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\MIDO-ALMDDS-JST_v1.4\Source\system_mode.c
      1          #include "include.h"
      2          
      3          

   \                                 In  segment EEPROM_N, align 1, keep-with-next
      4          __no_init __eeprom  int EEP_Zero_ADC_Point;
   \                     EEP_Zero_ADC_Point:
   \   00000000                      DS8 2

   \                                 In  segment EEPROM_N, align 1, keep-with-next
      5          __no_init __eeprom  int EEP_Span_ADC_Point;     
   \                     EEP_Span_ADC_Point:
   \   00000000                      DS8 2
      6          
      7          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      8          uint8_t System_Mode;
   \                     System_Mode:
   \   00000000                      DS8 1
      9          

   \                                 In  segment CODE, align 2, keep-with-next
     10          void RD_EEP_Value(void)
   \                     RD_EEP_Value:
     11          {
     12          
     13            ADC_AutoZero_Point = EEP_AutoZero_ADC_Point;
   \   00000000   ....               LDI     R20, LOW(EEP_AutoZero_ADC_Point)
   \   00000002   ....               LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
   \   00000004   ........           CALL    __eeget16_16
   \   00000008   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000000A   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   0000000C   8300               ST      Z, R16
   \   0000000E   8311               STD     Z+1, R17
     14            //if(abs(ADC_AutoZero_Point)>=30)
     15              //ADC_AutoZero_Point =0;
     16          }
   \   00000010   9508               RET
     17          
     18          
     19          
     20          
     21          
     22          
     23          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     24          uint8_t System_Initialize_Timer_Reg;
   \                     System_Initialize_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     25          uint16_t System_Initialize_Timer_Cnt;
   \                     System_Initialize_Timer_Cnt:
   \   00000000                      DS8 2

   \                                 In  segment CODE, align 2, keep-with-next
     26          void System_Initialize_Timer(void)
   \                     System_Initialize_Timer:
     27          {
     28          
     29            if(System_Initialize_Timer_Reg==0){
   \   00000000   9100....           LDS     R16, System_Initialize_Timer_Reg
   \   00000004   2300               TST     R16
   \   00000006   F4C9               BRNE    ??System_Initialize_Timer_0
     30          
     31              System_Initialize_Timer_Cnt++;
   \   00000008   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000000A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   5F0F               SUBI    R16, 255
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   8300               ST      Z, R16
   \   00000016   8311               STD     Z+1, R17
     32              if(System_Initialize_Timer_Cnt>3000){
   \   00000018   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000001A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   3B09               CPI     R16, 185
   \   00000022   E02B               LDI     R18, 11
   \   00000024   0712               CPC     R17, R18
   \   00000026   F048               BRCS    ??System_Initialize_Timer_0
     33                System_Initialize_Timer_Cnt=0;
   \   00000028   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000002A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8300               ST      Z, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   8301               STD     Z+1, R16
     34                System_Initialize_Timer_Reg=1;
   \   00000034   E001               LDI     R16, 1
   \   00000036   9300....           STS     System_Initialize_Timer_Reg, R16
     35              }
     36            }
     37          
     38          }
   \                     ??System_Initialize_Timer_0:
   \   0000003A   9508               RET
     39          
     40          
     41          
     42          

   \                                 In  segment CODE, align 2, keep-with-next
     43          void System_Auto_Zero_Function(void)
   \                     System_Auto_Zero_Function:
     44          {
     45          
     46            __disable_interrupt();
   \   00000000   94F8               CLI
     47            ADC_AutoZero_Point = Pressure_PA_Value;
   \   00000002   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   00000004   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   00000006   8100               LD      R16, Z
   \   00000008   8111               LDD     R17, Z+1
   \   0000000A   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000000C   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   0000000E   8300               ST      Z, R16
   \   00000010   8311               STD     Z+1, R17
     48            __enable_interrupt();
   \   00000012   9478               SEI
     49            EEP_AutoZero_ADC_Point = ADC_AutoZero_Point;
   \   00000014   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   00000016   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   00000018   8100               LD      R16, Z
   \   0000001A   8111               LDD     R17, Z+1
   \   0000001C   ....               LDI     R20, LOW(EEP_AutoZero_ADC_Point)
   \   0000001E   ....               LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
   \   00000020   ........           CALL    __eeput16_16
     50          
     51          }
   \   00000024   9508               RET
     52          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     53          uint8_t Sys_Run_Access_Enable;
   \                     Sys_Run_Access_Enable:
   \   00000000                      DS8 1

   \                                 In  segment CODE, align 2, keep-with-next
     54          void System_Operation(void)
   \                     System_Operation:
     55          {
     56          
     57          
     58            if(System_Initialize_Timer_Reg==1){
   \   00000000   9100....           LDS     R16, System_Initialize_Timer_Reg
   \   00000004   3001               CPI     R16, 1
   \   00000006   F4B1               BRNE    ??System_Operation_0
     59          
     60              if(Start_Switch_State==KEY_COMPLETE_STATE){
   \   00000008   9100....           LDS     R16, Start_Switch_State
   \   0000000C   3002               CPI     R16, 2
   \   0000000E   F461               BRNE    ??System_Operation_1
     61                if(Sys_Run_Access_Enable==0){
   \   00000010   9100....           LDS     R16, Sys_Run_Access_Enable
   \   00000014   2300               TST     R16
   \   00000016   F421               BRNE    ??System_Operation_2
     62                  System_Auto_Zero_Function();
   \   00000018   ....               RCALL   System_Auto_Zero_Function
     63                  Sys_Run_Access_Enable=1;
   \   0000001A   E001               LDI     R16, 1
   \   0000001C   9300....           STS     Sys_Run_Access_Enable, R16
     64                }
     65                System_Mode = S_Run_Mode;
   \                     ??System_Operation_2:
   \   00000020   E001               LDI     R16, 1
   \   00000022   9300....           STS     System_Mode, R16
   \   00000026   9508               RET
     66              }
     67              else {
     68                Sys_Run_Access_Enable=0;
   \                     ??System_Operation_1:
   \   00000028   E000               LDI     R16, 0
   \   0000002A   9300....           STS     Sys_Run_Access_Enable, R16
     69                System_Mode = S_Stop_Mode;
   \   0000002E   E002               LDI     R16, 2
   \   00000030   9300....           STS     System_Mode, R16
     70              }
     71          
     72            
     73            }
     74          
     75          }
   \                     ??System_Operation_0:
   \   00000034   9508               RET
     76          
     77          

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   RD_EEP_Value
        2 __eeget16_16
      2   System_Auto_Zero_Function
        2 __eeput16_16
      2   System_Initialize_Timer
      2   System_Operation
        2   -> System_Auto_Zero_Function


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  EEP_Span_ADC_Point
       2  EEP_Zero_ADC_Point
      18  RD_EEP_Value
       1  Sys_Run_Access_Enable
      38  System_Auto_Zero_Function
      60  System_Initialize_Timer
       2  System_Initialize_Timer_Cnt
       1  System_Initialize_Timer_Reg
       1  System_Mode
      54  System_Operation
       6  -- Other

 
 170 bytes in segment CODE
   4 bytes in segment EEPROM_N
   6 bytes in segment INITTAB
   5 bytes in segment NEAR_Z
 
 170 bytes of CODE  memory (+ 6 bytes shared)
   5 bytes of DATA  memory
   4 bytes of XDATA memory

Errors: none
Warnings: none
