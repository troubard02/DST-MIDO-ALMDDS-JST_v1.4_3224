###############################################################################
#
# IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR       11/Jun/2021  18:01:51
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c
#    Command line =  
#        -f C:\Users\troub\AppData\Local\Temp\EW9574.tmp
#        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c"
#        --cpu=m168pa -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1.
#        Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj"
#        -lC "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List" -lA
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug -e -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\min_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\atmel_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\" --eeprom_size 512
#        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
#    Locale       =  Korean_KOR.949
#    List file    =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List\system_mode.lst
#    Object file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj\system_mode.r90
#
###############################################################################

C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c
      1          #include "include.h"
      2          
      3          

   \                                 In  segment EEPROM_N, align 1, keep-with-next
      4          __no_init __eeprom  int EEP_Zero_ADC_Point;
   \                     EEP_Zero_ADC_Point:
   \   00000000                      DS8 2

   \                                 In  segment EEPROM_N, align 1, keep-with-next
      5          __no_init __eeprom  int EEP_Span_ADC_Point;     
   \                     EEP_Span_ADC_Point:
   \   00000000                      DS8 2
      6          
      7          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      8          uint8_t System_Mode;
   \                     System_Mode:
   \   00000000                      DS8 1
      9          

   \                                 In  segment CODE, align 2, keep-with-next
     10          void RD_EEP_Value(void)
   \                     RD_EEP_Value:
     11          {
     12          
     13            ADC_AutoZero_Point = EEP_AutoZero_ADC_Point;
   \   00000000   ....               LDI     R20, LOW(EEP_AutoZero_ADC_Point)
   \   00000002   ....               LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
   \   00000004   ........           CALL    __eeget16_16
   \   00000008   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000000A   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   0000000C   8300               ST      Z, R16
   \   0000000E   8311               STD     Z+1, R17
     14            //if(abs(ADC_AutoZero_Point)>=30)
     15              //ADC_AutoZero_Point =0;
     16          }
   \   00000010   9508               RET
     17          
     18          
     19          
     20          
     21          
     22          
     23          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     24          uint8_t System_Initialize_Timer_Reg;
   \                     System_Initialize_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     25          uint16_t System_Initialize_Timer_Cnt;
   \                     System_Initialize_Timer_Cnt:
   \   00000000                      DS8 2

   \                                 In  segment CODE, align 2, keep-with-next
     26          void System_Initialize_Timer(void)
   \                     System_Initialize_Timer:
     27          {
     28          
     29            if(System_Initialize_Timer_Reg==0){
   \   00000000   9100....           LDS     R16, System_Initialize_Timer_Reg
   \   00000004   2300               TST     R16
   \   00000006   F4C9               BRNE    ??System_Initialize_Timer_0
     30          
     31              System_Initialize_Timer_Cnt++;
   \   00000008   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000000A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   5F0F               SUBI    R16, 255
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   8300               ST      Z, R16
   \   00000016   8311               STD     Z+1, R17
     32              if(System_Initialize_Timer_Cnt>3000){
   \   00000018   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000001A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   3B09               CPI     R16, 185
   \   00000022   E02B               LDI     R18, 11
   \   00000024   0712               CPC     R17, R18
   \   00000026   F048               BRCS    ??System_Initialize_Timer_0
     33                System_Initialize_Timer_Cnt=0;
   \   00000028   ....               LDI     R30, LOW(System_Initialize_Timer_Cnt)
   \   0000002A   ....               LDI     R31, (System_Initialize_Timer_Cnt) >> 8
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8300               ST      Z, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   8301               STD     Z+1, R16
     34                System_Initialize_Timer_Reg=1;
   \   00000034   E001               LDI     R16, 1
   \   00000036   9300....           STS     System_Initialize_Timer_Reg, R16
     35              }
     36            }
     37          
     38          }
   \                     ??System_Initialize_Timer_0:
   \   0000003A   9508               RET
     39          
     40          
     41          
     42          

   \                                 In  segment CODE, align 2, keep-with-next
     43          void System_Auto_Zero_Function(void)
   \                     System_Auto_Zero_Function:
     44          {
     45          
     46            __disable_interrupt();
   \   00000000   94F8               CLI
     47            ADC_AutoZero_Point = Pressure_PA_Value;
   \   00000002   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   00000004   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   00000006   8100               LD      R16, Z
   \   00000008   8111               LDD     R17, Z+1
   \   0000000A   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000000C   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   0000000E   8300               ST      Z, R16
   \   00000010   8311               STD     Z+1, R17
     48            __enable_interrupt();
   \   00000012   9478               SEI
     49            EEP_AutoZero_ADC_Point = ADC_AutoZero_Point;
   \   00000014   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   00000016   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   00000018   8100               LD      R16, Z
   \   0000001A   8111               LDD     R17, Z+1
   \   0000001C   ....               LDI     R20, LOW(EEP_AutoZero_ADC_Point)
   \   0000001E   ....               LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
   \   00000020   ........           CALL    __eeput16_16
     50          
     51            
     52            
     53            //Display_Delay_Cnt=0;
     54            //Display_Mode=D_AutoZero_Mode;  
     55          
     56          }
   \   00000024   9508               RET
     57          
     58          //////////////////////////////////////////////////////////////////////////
     59          /////////////////// 1 Minute Delay Switch On AZ Function /////////////////
     60          //////////////////////////////////////////////////////////////////////////
     61          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     62          uint8_t Sys_AZ_Delay_Timer_Reg;
   \                     Sys_AZ_Delay_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     63          uint8_t Sys_AZ_1S_Timer_Cnt;
   \                     Sys_AZ_1S_Timer_Cnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     64          uint16_t Sys_AZ_Delay_Timer_Cnt;
   \                     Sys_AZ_Delay_Timer_Cnt:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     65          uint8_t Sys_Run_Access_Enable;
   \                     Sys_Run_Access_Enable:
   \   00000000                      DS8 1
     66          
     67          

   \                                 In  segment CODE, align 2, keep-with-next
     68          void Sys_AZ_Delay_Timer_Stop(void)
   \                     Sys_AZ_Delay_Timer_Stop:
     69          {
     70          
     71            Sys_AZ_1S_Timer_Cnt=0;
   \   00000000   E000               LDI     R16, 0
   \   00000002   9300....           STS     Sys_AZ_1S_Timer_Cnt, R16
     72            Sys_AZ_Delay_Timer_Cnt=0;
   \   00000006   ....               LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
   \   00000008   ....               LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   8300               ST      Z, R16
   \   0000000E   E000               LDI     R16, 0
   \   00000010   8301               STD     Z+1, R16
     73            Sys_AZ_Delay_Timer_Reg=0;
   \   00000012   E000               LDI     R16, 0
   \   00000014   9300....           STS     Sys_AZ_Delay_Timer_Reg, R16
     74          
     75          
     76          }
   \   00000018   9508               RET
     77          

   \                                 In  segment CODE, align 2, keep-with-next
     78          void Sys_AZ_Delay_Timer_Start(void)
   \                     Sys_AZ_Delay_Timer_Start:
     79          {
     80          
     81            Sys_AZ_1S_Timer_Cnt=0;
   \   00000000   E000               LDI     R16, 0
   \   00000002   9300....           STS     Sys_AZ_1S_Timer_Cnt, R16
     82            Sys_AZ_Delay_Timer_Cnt=0;
   \   00000006   ....               LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
   \   00000008   ....               LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   8300               ST      Z, R16
   \   0000000E   E000               LDI     R16, 0
   \   00000010   8301               STD     Z+1, R16
     83            Sys_AZ_Delay_Timer_Reg=1;
   \   00000012   E001               LDI     R16, 1
   \   00000014   9300....           STS     Sys_AZ_Delay_Timer_Reg, R16
     84          
     85          }
   \   00000018   9508               RET
     86          

   \                                 In  segment CODE, align 2, keep-with-next
     87          void Sys_AZ_Delay_Timer(void)
   \                     Sys_AZ_Delay_Timer:
     88          {
     89          
     90          
     91            /* Make 1 Minute Timer */
     92            if(Sys_AZ_Delay_Timer_Reg==1){
   \   00000000   9100....           LDS     R16, Sys_AZ_Delay_Timer_Reg
   \   00000004   3001               CPI     R16, 1
   \   00000006   F529               BRNE    ??Sys_AZ_Delay_Timer_0
     93          
     94          
     95              Sys_AZ_Delay_Timer_Cnt++;
   \   00000008   ....               LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
   \   0000000A   ....               LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   5F0F               SUBI    R16, 255
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   8300               ST      Z, R16
   \   00000016   8311               STD     Z+1, R17
     96              if(Sys_AZ_Delay_Timer_Cnt>5000){
   \   00000018   ....               LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
   \   0000001A   ....               LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   3809               CPI     R16, 137
   \   00000022   E123               LDI     R18, 19
   \   00000024   0712               CPC     R17, R18
   \   00000026   F058               BRCS    ??Sys_AZ_Delay_Timer_1
     97          
     98                Sys_AZ_Delay_Timer_Cnt=0;
   \   00000028   ....               LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
   \   0000002A   ....               LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8300               ST      Z, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   8301               STD     Z+1, R16
     99                Sys_AZ_1S_Timer_Cnt++;
   \   00000034   9100....           LDS     R16, Sys_AZ_1S_Timer_Cnt
   \   00000038   9503               INC     R16
   \   0000003A   9300....           STS     Sys_AZ_1S_Timer_Cnt, R16
    100          
    101              }
    102          
    103              if(Sys_AZ_1S_Timer_Cnt>60){
   \                     ??Sys_AZ_Delay_Timer_1:
   \   0000003E   9100....           LDS     R16, Sys_AZ_1S_Timer_Cnt
   \   00000042   330D               CPI     R16, 61
   \   00000044   F030               BRCS    ??Sys_AZ_Delay_Timer_0
    104          
    105                Sys_AZ_1S_Timer_Cnt=0;
   \   00000046   E000               LDI     R16, 0
   \   00000048   9300....           STS     Sys_AZ_1S_Timer_Cnt, R16
    106                Sys_AZ_Delay_Timer_Reg=2; // Complete 1 Minute Timer 
   \   0000004C   E002               LDI     R16, 2
   \   0000004E   9300....           STS     Sys_AZ_Delay_Timer_Reg, R16
    107                
    108                //Sys_Run_Access_Enable=0;
    109              }
    110          
    111            }
    112          
    113          }
   \                     ??Sys_AZ_Delay_Timer_0:
   \   00000052   9508               RET
    114          
    115          
    116          //////////////////////////////////////////////////////////////////////////
    117          ////////////////////// 1 Hour Interval AZ Function ///////////////////////
    118          //////////////////////////////////////////////////////////////////////////
    119          
    120          

   \                                 In  segment CODE, align 2, keep-with-next
    121          void System_Interval_Auto_Zero_Function(void)
   \                     System_Interval_Auto_Zero_Function:
    122          {
    123          
    124            if(abs(Pressure_PA_Value)<15){
   \   00000000   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   00000002   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   8111               LDD     R17, Z+1
   \   00000008   ........           CALL    abs
   \   0000000C   300F               CPI     R16, 15
   \   0000000E   4010               SBCI    R17, 0
   \   00000010   F494               BRGE    ??System_Interval_Auto_Zero_Function_0
    125          
    126              __disable_interrupt();
   \   00000012   94F8               CLI
    127              ADC_AutoZero_Point = Pressure_PA_Value;
   \   00000014   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   00000016   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   00000018   8100               LD      R16, Z
   \   0000001A   8111               LDD     R17, Z+1
   \   0000001C   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000001E   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   00000020   8300               ST      Z, R16
   \   00000022   8311               STD     Z+1, R17
    128              __enable_interrupt();
   \   00000024   9478               SEI
    129              EEP_AutoZero_ADC_Point = ADC_AutoZero_Point;
   \   00000026   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   00000028   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   0000002A   8100               LD      R16, Z
   \   0000002C   8111               LDD     R17, Z+1
   \   0000002E   ....               LDI     R20, LOW(EEP_AutoZero_ADC_Point)
   \   00000030   ....               LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
   \   00000032   ........           CALL    __eeput16_16
    130          
    131          
    132          
    133          
    134            }
    135            
    136            //Display_Delay_Cnt=0;
    137            //Display_Mode=D_AutoZero_Mode;
    138          
    139          }
   \                     ??System_Interval_Auto_Zero_Function_0:
   \   00000036   9508               RET
    140          
    141          
    142          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    143          uint8_t Sys_AZ_Interval_Timer_Reg;
   \                     Sys_AZ_Interval_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    144          uint16_t Sys_AZ_Interval_1S_Timer_Cnt;
   \                     Sys_AZ_Interval_1S_Timer_Cnt:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    145          uint16_t Sys_AZ_Interval_Timer_Cnt;
   \                     Sys_AZ_Interval_Timer_Cnt:
   \   00000000                      DS8 2
    146          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    147          uint8_t Sys_AZ_Interval_Flag;
   \                     Sys_AZ_Interval_Flag:
   \   00000000                      DS8 1
    148          

   \                                 In  segment CODE, align 2, keep-with-next
    149          void Sys_AZ_Interval_Timer_Stop(void)
   \                     Sys_AZ_Interval_Timer_Stop:
    150          {
    151          
    152            Sys_AZ_Interval_1S_Timer_Cnt=0;
   \   00000000   ....               LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
   \   00000002   ....               LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
   \   00000004   E000               LDI     R16, 0
   \   00000006   8300               ST      Z, R16
   \   00000008   E000               LDI     R16, 0
   \   0000000A   8301               STD     Z+1, R16
    153            Sys_AZ_Interval_Timer_Cnt=0;
   \   0000000C   ....               LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
   \   0000000E   ....               LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
   \   00000010   E000               LDI     R16, 0
   \   00000012   8300               ST      Z, R16
   \   00000014   E000               LDI     R16, 0
   \   00000016   8301               STD     Z+1, R16
    154            Sys_AZ_Interval_Timer_Reg=0;
   \   00000018   E000               LDI     R16, 0
   \   0000001A   9300....           STS     Sys_AZ_Interval_Timer_Reg, R16
    155          
    156          }
   \   0000001E   9508               RET
    157          

   \                                 In  segment CODE, align 2, keep-with-next
    158          void Sys_AZ_Interval_Timer_Start(void)
   \                     Sys_AZ_Interval_Timer_Start:
    159          {
    160          
    161            Sys_AZ_Interval_1S_Timer_Cnt=0;
   \   00000000   ....               LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
   \   00000002   ....               LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
   \   00000004   E000               LDI     R16, 0
   \   00000006   8300               ST      Z, R16
   \   00000008   E000               LDI     R16, 0
   \   0000000A   8301               STD     Z+1, R16
    162            Sys_AZ_Interval_Timer_Cnt=0;
   \   0000000C   ....               LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
   \   0000000E   ....               LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
   \   00000010   E000               LDI     R16, 0
   \   00000012   8300               ST      Z, R16
   \   00000014   E000               LDI     R16, 0
   \   00000016   8301               STD     Z+1, R16
    163            Sys_AZ_Interval_Timer_Reg=1;
   \   00000018   E001               LDI     R16, 1
   \   0000001A   9300....           STS     Sys_AZ_Interval_Timer_Reg, R16
    164          
    165          }
   \   0000001E   9508               RET
    166          

   \                                 In  segment CODE, align 2, keep-with-next
    167          void Sys_AZ_Interval_Timer(void)
   \                     Sys_AZ_Interval_Timer:
    168          {
    169          
    170          
    171            /* Make 1 Minute Timer */
    172            if(Sys_AZ_Interval_Timer_Reg==1){
   \   00000000   9100....           LDS     R16, Sys_AZ_Interval_Timer_Reg
   \   00000004   3001               CPI     R16, 1
   \   00000006   F581               BRNE    ??Sys_AZ_Interval_Timer_0
    173          
    174          
    175              Sys_AZ_Interval_Timer_Cnt++;
   \   00000008   ....               LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
   \   0000000A   ....               LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   5F0F               SUBI    R16, 255
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   8300               ST      Z, R16
   \   00000016   8311               STD     Z+1, R17
    176              if(Sys_AZ_Interval_Timer_Cnt>5000){
   \   00000018   ....               LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
   \   0000001A   ....               LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   3809               CPI     R16, 137
   \   00000022   E123               LDI     R18, 19
   \   00000024   0712               CPC     R17, R18
   \   00000026   F070               BRCS    ??Sys_AZ_Interval_Timer_1
    177          
    178                Sys_AZ_Interval_Timer_Cnt=0;
   \   00000028   ....               LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
   \   0000002A   ....               LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8300               ST      Z, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   8301               STD     Z+1, R16
    179                Sys_AZ_Interval_1S_Timer_Cnt++;
   \   00000034   ....               LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
   \   00000036   ....               LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
   \   00000038   8100               LD      R16, Z
   \   0000003A   8111               LDD     R17, Z+1
   \   0000003C   5F0F               SUBI    R16, 255
   \   0000003E   4F1F               SBCI    R17, 255
   \   00000040   8300               ST      Z, R16
   \   00000042   8311               STD     Z+1, R17
    180          
    181              }
    182              
    183              // Complete 1 Hour Timer 
    184              if(Sys_AZ_Interval_1S_Timer_Cnt>3600){ // 60*60= 3600
   \                     ??Sys_AZ_Interval_Timer_1:
   \   00000044   ....               LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
   \   00000046   ....               LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
   \   00000048   8100               LD      R16, Z
   \   0000004A   8111               LDD     R17, Z+1
   \   0000004C   3101               CPI     R16, 17
   \   0000004E   E02E               LDI     R18, 14
   \   00000050   0712               CPC     R17, R18
   \   00000052   F050               BRCS    ??Sys_AZ_Interval_Timer_0
    185          
    186                Sys_AZ_Interval_1S_Timer_Cnt=0;
   \   00000054   ....               LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
   \   00000056   ....               LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
   \   00000058   E000               LDI     R16, 0
   \   0000005A   8300               ST      Z, R16
   \   0000005C   E000               LDI     R16, 0
   \   0000005E   8301               STD     Z+1, R16
    187                //Sys_AZ_Interval_Timer_Reg=2; 
    188                Sys_AZ_Interval_Flag=1;
   \   00000060   E001               LDI     R16, 1
   \   00000062   9300....           STS     Sys_AZ_Interval_Flag, R16
    189                Sys_AZ_Interval_Timer_Start();
   \   00000066   ....               RCALL   Sys_AZ_Interval_Timer_Start
    190                //Sys_Run_Access_Enable=0;
    191              }
    192          
    193            }
    194          
    195          }
   \                     ??Sys_AZ_Interval_Timer_0:
   \   00000068   9508               RET
    196          
    197          
    198          

   \                                 In  segment CODE, align 2, keep-with-next
    199          void System_Operation(void)
   \                     System_Operation:
    200          {
    201          
    202          
    203            if(System_Initialize_Timer_Reg==1){
   \   00000000   9100....           LDS     R16, System_Initialize_Timer_Reg
   \   00000004   3001               CPI     R16, 1
   \   00000006   F539               BRNE    ??System_Operation_0
    204          
    205              if(Start_Switch_State==KEY_COMPLETE_STATE){
   \   00000008   9100....           LDS     R16, Start_Switch_State
   \   0000000C   3002               CPI     R16, 2
   \   0000000E   F4C1               BRNE    ??System_Operation_1
    206                if(Sys_Run_Access_Enable==0){
   \   00000010   9100....           LDS     R16, Sys_Run_Access_Enable
   \   00000014   2300               TST     R16
   \   00000016   F429               BRNE    ??System_Operation_2
    207                  System_Auto_Zero_Function();
   \   00000018   ....               RCALL   System_Auto_Zero_Function
    208                  Sys_Run_Access_Enable=1;
   \   0000001A   E001               LDI     R16, 1
   \   0000001C   9300....           STS     Sys_Run_Access_Enable, R16
    209                  Sys_AZ_Delay_Timer_Start();
   \   00000020   ....               RCALL   Sys_AZ_Delay_Timer_Start
    210          
    211                }
    212          
    213                Sys_AZ_Interval_Timer_Reg=1;
   \                     ??System_Operation_2:
   \   00000022   E001               LDI     R16, 1
   \   00000024   9300....           STS     Sys_AZ_Interval_Timer_Reg, R16
    214          
    215                if(Sys_AZ_Interval_Flag==1){
   \   00000028   9100....           LDS     R16, Sys_AZ_Interval_Flag
   \   0000002C   3001               CPI     R16, 1
   \   0000002E   F421               BRNE    ??System_Operation_3
    216                  Sys_AZ_Interval_Flag=0;
   \   00000030   E000               LDI     R16, 0
   \   00000032   9300....           STS     Sys_AZ_Interval_Flag, R16
    217          
    218                  System_Interval_Auto_Zero_Function();
   \   00000036   ....               RCALL   System_Interval_Auto_Zero_Function
    219          
    220                }
    221          
    222          
    223                System_Mode = S_Run_Mode;
   \                     ??System_Operation_3:
   \   00000038   E001               LDI     R16, 1
   \   0000003A   9300....           STS     System_Mode, R16
   \   0000003E   9508               RET
    224              }
    225              else {
    226          
    227                /* 1 Minute Timer Complete & Start Signal Off */
    228                if(Sys_AZ_Delay_Timer_Reg==2)
   \                     ??System_Operation_1:
   \   00000040   9100....           LDS     R16, Sys_AZ_Delay_Timer_Reg
   \   00000044   3002               CPI     R16, 2
   \   00000046   F419               BRNE    ??System_Operation_4
    229                  Sys_Run_Access_Enable=0;
   \   00000048   E000               LDI     R16, 0
   \   0000004A   9300....           STS     Sys_Run_Access_Enable, R16
    230          
    231                /* Stop 1 Hour Timer */
    232                Sys_AZ_Interval_Timer_Stop();
   \                     ??System_Operation_4:
   \   0000004E   ....               RCALL   Sys_AZ_Interval_Timer_Stop
    233          
    234                System_Mode = S_Stop_Mode;
   \   00000050   E002               LDI     R16, 2
   \   00000052   9300....           STS     System_Mode, R16
    235              }
    236          
    237            
    238            }
    239          
    240          }
   \                     ??System_Operation_0:
   \   00000056   9508               RET
    241          
    242          

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   RD_EEP_Value
        2 __eeget16_16
      2   Sys_AZ_Delay_Timer
      2   Sys_AZ_Delay_Timer_Start
      2   Sys_AZ_Delay_Timer_Stop
      2   Sys_AZ_Interval_Timer
        2   -> Sys_AZ_Interval_Timer_Start
      2   Sys_AZ_Interval_Timer_Start
      2   Sys_AZ_Interval_Timer_Stop
      2   System_Auto_Zero_Function
        2 __eeput16_16
      2   System_Initialize_Timer
      2   System_Interval_Auto_Zero_Function
        2   -> abs
        2 __eeput16_16
      2   System_Operation
        2   -> Sys_AZ_Delay_Timer_Start
        2   -> Sys_AZ_Interval_Timer_Stop
        2   -> System_Auto_Zero_Function
        2   -> System_Interval_Auto_Zero_Function


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  EEP_Span_ADC_Point
       2  EEP_Zero_ADC_Point
      18  RD_EEP_Value
       1  Sys_AZ_1S_Timer_Cnt
      84  Sys_AZ_Delay_Timer
       2  Sys_AZ_Delay_Timer_Cnt
       1  Sys_AZ_Delay_Timer_Reg
      26  Sys_AZ_Delay_Timer_Start
      26  Sys_AZ_Delay_Timer_Stop
       2  Sys_AZ_Interval_1S_Timer_Cnt
       1  Sys_AZ_Interval_Flag
     106  Sys_AZ_Interval_Timer
       2  Sys_AZ_Interval_Timer_Cnt
       1  Sys_AZ_Interval_Timer_Reg
      32  Sys_AZ_Interval_Timer_Start
      32  Sys_AZ_Interval_Timer_Stop
       1  Sys_Run_Access_Enable
      38  System_Auto_Zero_Function
      60  System_Initialize_Timer
       2  System_Initialize_Timer_Cnt
       1  System_Initialize_Timer_Reg
      56  System_Interval_Auto_Zero_Function
       1  System_Mode
      88  System_Operation
       6  -- Other

 
 566 bytes in segment CODE
   4 bytes in segment EEPROM_N
   6 bytes in segment INITTAB
  15 bytes in segment NEAR_Z
 
 566 bytes of CODE  memory (+ 6 bytes shared)
  15 bytes of DATA  memory
   4 bytes of XDATA memory

Errors: none
Warnings: none
