///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR      11/Jun/2021  18:01:51
// Copyright 1996-2019 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Atmel AVR
//
//    Source file  =  
//        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c
//    Command line =  
//        -f C:\Users\troub\AppData\Local\Temp\EW9574.tmp
//        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c"
//        --cpu=m168pa -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1.
//        Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj"
//        -lC "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List" -lA
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List"
//        --initializers_in_flash --no_cse --no_inline --no_code_motion
//        --no_cross_call --no_clustering --no_tbaa --debug -e -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4.
//        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\min_driver\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4.
//        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\atmel_driver\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\" --eeprom_size 512
//        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
//        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
//    Locale       =  Korean_KOR.949
//    List file    =  
//        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4.
//        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List\system_mode.s90
//
///////////////////////////////////////////////////////////////////////////////

        NAME system_mode

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega168PA"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__dlib_full_locale_support", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"
        RTMODEL "__vtable_memory", "__nearflash"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?need_segment_init
        EXTERN __eeget16_16
        EXTERN __eeput16_16

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC EEP_Span_ADC_Point
        PUBLIC EEP_Zero_ADC_Point
        PUBLIC RD_EEP_Value
        PUBLIC Sys_AZ_1S_Timer_Cnt
        PUBLIC Sys_AZ_Delay_Timer
        PUBLIC Sys_AZ_Delay_Timer_Cnt
        PUBLIC Sys_AZ_Delay_Timer_Reg
        PUBLIC Sys_AZ_Delay_Timer_Start
        PUBLIC Sys_AZ_Delay_Timer_Stop
        PUBLIC Sys_AZ_Interval_1S_Timer_Cnt
        PUBLIC Sys_AZ_Interval_Flag
        PUBLIC Sys_AZ_Interval_Timer
        PUBLIC Sys_AZ_Interval_Timer_Cnt
        PUBLIC Sys_AZ_Interval_Timer_Reg
        PUBLIC Sys_AZ_Interval_Timer_Start
        PUBLIC Sys_AZ_Interval_Timer_Stop
        PUBLIC Sys_Run_Access_Enable
        PUBLIC System_Auto_Zero_Function
        PUBLIC System_Initialize_Timer
        PUBLIC System_Initialize_Timer_Cnt
        PUBLIC System_Initialize_Timer_Reg
        PUBLIC System_Interval_Auto_Zero_Function
        PUBLIC System_Mode
        PUBLIC System_Operation
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        EXTERN ADC_AutoZero_Point
        EXTERN EEP_AutoZero_ADC_Point
        EXTERN Pressure_PA_Value
        EXTERN Start_Switch_State
        EXTERN abs

// C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\system_mode.c
//    1 #include "include.h"
//    2 
//    3 

        RSEG EEPROM_N:XDATA:NOROOT(0)
//    4 __no_init __eeprom  int EEP_Zero_ADC_Point;
EEP_Zero_ADC_Point:
        DS8 2

        RSEG EEPROM_N:XDATA:NOROOT(0)
//    5 __no_init __eeprom  int EEP_Span_ADC_Point;     
EEP_Span_ADC_Point:
        DS8 2
//    6 
//    7 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//    8 uint8_t System_Mode;
System_Mode:
        DS8 1
//    9 

        RSEG CODE:CODE:NOROOT(1)
//   10 void RD_EEP_Value(void)
RD_EEP_Value:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function RD_EEP_Value
//   11 {
//   12 
//   13   ADC_AutoZero_Point = EEP_AutoZero_ADC_Point;
        LDI     R20, LOW(EEP_AutoZero_ADC_Point)
        LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
          CFI FunCall __eeget16_16
        CALL    __eeget16_16
        LDI     R30, LOW(ADC_AutoZero_Point)
        LDI     R31, (ADC_AutoZero_Point) >> 8
        ST      Z, R16
        STD     Z+1, R17
//   14   //if(abs(ADC_AutoZero_Point)>=30)
//   15     //ADC_AutoZero_Point =0;
//   16 }
        RET
          CFI EndBlock cfiBlock0
//   17 
//   18 
//   19 
//   20 
//   21 
//   22 
//   23 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   24 uint8_t System_Initialize_Timer_Reg;
System_Initialize_Timer_Reg:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   25 uint16_t System_Initialize_Timer_Cnt;
System_Initialize_Timer_Cnt:
        DS8 2

        RSEG CODE:CODE:NOROOT(1)
//   26 void System_Initialize_Timer(void)
System_Initialize_Timer:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function System_Initialize_Timer
          CFI NoCalls
//   27 {
//   28 
//   29   if(System_Initialize_Timer_Reg==0){
        LDS     R16, System_Initialize_Timer_Reg
        TST     R16
        BRNE    ??System_Initialize_Timer_0
//   30 
//   31     System_Initialize_Timer_Cnt++;
        LDI     R30, LOW(System_Initialize_Timer_Cnt)
        LDI     R31, (System_Initialize_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        SUBI    R16, 255
        SBCI    R17, 255
        ST      Z, R16
        STD     Z+1, R17
//   32     if(System_Initialize_Timer_Cnt>3000){
        LDI     R30, LOW(System_Initialize_Timer_Cnt)
        LDI     R31, (System_Initialize_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        CPI     R16, 185
        LDI     R18, 11
        CPC     R17, R18
        BRCS    ??System_Initialize_Timer_0
//   33       System_Initialize_Timer_Cnt=0;
        LDI     R30, LOW(System_Initialize_Timer_Cnt)
        LDI     R31, (System_Initialize_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//   34       System_Initialize_Timer_Reg=1;
        LDI     R16, 1
        STS     System_Initialize_Timer_Reg, R16
//   35     }
//   36   }
//   37 
//   38 }
??System_Initialize_Timer_0:
        RET
          CFI EndBlock cfiBlock1
//   39 
//   40 
//   41 
//   42 

        RSEG CODE:CODE:NOROOT(1)
//   43 void System_Auto_Zero_Function(void)
System_Auto_Zero_Function:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function System_Auto_Zero_Function
//   44 {
//   45 
//   46   __disable_interrupt();
        CLI
//   47   ADC_AutoZero_Point = Pressure_PA_Value;
        LDI     R30, LOW(Pressure_PA_Value)
        LDI     R31, (Pressure_PA_Value) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        LDI     R30, LOW(ADC_AutoZero_Point)
        LDI     R31, (ADC_AutoZero_Point) >> 8
        ST      Z, R16
        STD     Z+1, R17
//   48   __enable_interrupt();
        SEI
//   49   EEP_AutoZero_ADC_Point = ADC_AutoZero_Point;
        LDI     R30, LOW(ADC_AutoZero_Point)
        LDI     R31, (ADC_AutoZero_Point) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        LDI     R20, LOW(EEP_AutoZero_ADC_Point)
        LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
          CFI FunCall __eeput16_16
        CALL    __eeput16_16
//   50 
//   51   
//   52   
//   53   //Display_Delay_Cnt=0;
//   54   //Display_Mode=D_AutoZero_Mode;  
//   55 
//   56 }
        RET
          CFI EndBlock cfiBlock2
//   57 
//   58 //////////////////////////////////////////////////////////////////////////
//   59 /////////////////// 1 Minute Delay Switch On AZ Function /////////////////
//   60 //////////////////////////////////////////////////////////////////////////
//   61 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   62 uint8_t Sys_AZ_Delay_Timer_Reg;
Sys_AZ_Delay_Timer_Reg:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   63 uint8_t Sys_AZ_1S_Timer_Cnt;
Sys_AZ_1S_Timer_Cnt:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   64 uint16_t Sys_AZ_Delay_Timer_Cnt;
Sys_AZ_Delay_Timer_Cnt:
        DS8 2

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   65 uint8_t Sys_Run_Access_Enable;
Sys_Run_Access_Enable:
        DS8 1
//   66 
//   67 

        RSEG CODE:CODE:NOROOT(1)
//   68 void Sys_AZ_Delay_Timer_Stop(void)
Sys_AZ_Delay_Timer_Stop:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function Sys_AZ_Delay_Timer_Stop
          CFI NoCalls
//   69 {
//   70 
//   71   Sys_AZ_1S_Timer_Cnt=0;
        LDI     R16, 0
        STS     Sys_AZ_1S_Timer_Cnt, R16
//   72   Sys_AZ_Delay_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
        LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//   73   Sys_AZ_Delay_Timer_Reg=0;
        LDI     R16, 0
        STS     Sys_AZ_Delay_Timer_Reg, R16
//   74 
//   75 
//   76 }
        RET
          CFI EndBlock cfiBlock3
//   77 

        RSEG CODE:CODE:NOROOT(1)
//   78 void Sys_AZ_Delay_Timer_Start(void)
Sys_AZ_Delay_Timer_Start:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function Sys_AZ_Delay_Timer_Start
          CFI NoCalls
//   79 {
//   80 
//   81   Sys_AZ_1S_Timer_Cnt=0;
        LDI     R16, 0
        STS     Sys_AZ_1S_Timer_Cnt, R16
//   82   Sys_AZ_Delay_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
        LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//   83   Sys_AZ_Delay_Timer_Reg=1;
        LDI     R16, 1
        STS     Sys_AZ_Delay_Timer_Reg, R16
//   84 
//   85 }
        RET
          CFI EndBlock cfiBlock4
//   86 

        RSEG CODE:CODE:NOROOT(1)
//   87 void Sys_AZ_Delay_Timer(void)
Sys_AZ_Delay_Timer:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function Sys_AZ_Delay_Timer
          CFI NoCalls
//   88 {
//   89 
//   90 
//   91   /* Make 1 Minute Timer */
//   92   if(Sys_AZ_Delay_Timer_Reg==1){
        LDS     R16, Sys_AZ_Delay_Timer_Reg
        CPI     R16, 1
        BRNE    ??Sys_AZ_Delay_Timer_0
//   93 
//   94 
//   95     Sys_AZ_Delay_Timer_Cnt++;
        LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
        LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        SUBI    R16, 255
        SBCI    R17, 255
        ST      Z, R16
        STD     Z+1, R17
//   96     if(Sys_AZ_Delay_Timer_Cnt>5000){
        LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
        LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        CPI     R16, 137
        LDI     R18, 19
        CPC     R17, R18
        BRCS    ??Sys_AZ_Delay_Timer_1
//   97 
//   98       Sys_AZ_Delay_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Delay_Timer_Cnt)
        LDI     R31, (Sys_AZ_Delay_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//   99       Sys_AZ_1S_Timer_Cnt++;
        LDS     R16, Sys_AZ_1S_Timer_Cnt
        INC     R16
        STS     Sys_AZ_1S_Timer_Cnt, R16
//  100 
//  101     }
//  102 
//  103     if(Sys_AZ_1S_Timer_Cnt>60){
??Sys_AZ_Delay_Timer_1:
        LDS     R16, Sys_AZ_1S_Timer_Cnt
        CPI     R16, 61
        BRCS    ??Sys_AZ_Delay_Timer_0
//  104 
//  105       Sys_AZ_1S_Timer_Cnt=0;
        LDI     R16, 0
        STS     Sys_AZ_1S_Timer_Cnt, R16
//  106       Sys_AZ_Delay_Timer_Reg=2; // Complete 1 Minute Timer 
        LDI     R16, 2
        STS     Sys_AZ_Delay_Timer_Reg, R16
//  107       
//  108       //Sys_Run_Access_Enable=0;
//  109     }
//  110 
//  111   }
//  112 
//  113 }
??Sys_AZ_Delay_Timer_0:
        RET
          CFI EndBlock cfiBlock5
//  114 
//  115 
//  116 //////////////////////////////////////////////////////////////////////////
//  117 ////////////////////// 1 Hour Interval AZ Function ///////////////////////
//  118 //////////////////////////////////////////////////////////////////////////
//  119 
//  120 

        RSEG CODE:CODE:NOROOT(1)
//  121 void System_Interval_Auto_Zero_Function(void)
System_Interval_Auto_Zero_Function:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function System_Interval_Auto_Zero_Function
//  122 {
//  123 
//  124   if(abs(Pressure_PA_Value)<15){
        LDI     R30, LOW(Pressure_PA_Value)
        LDI     R31, (Pressure_PA_Value) >> 8
        LD      R16, Z
        LDD     R17, Z+1
          CFI FunCall abs
        CALL    abs
        CPI     R16, 15
        SBCI    R17, 0
        BRGE    ??System_Interval_Auto_Zero_Function_0
//  125 
//  126     __disable_interrupt();
        CLI
//  127     ADC_AutoZero_Point = Pressure_PA_Value;
        LDI     R30, LOW(Pressure_PA_Value)
        LDI     R31, (Pressure_PA_Value) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        LDI     R30, LOW(ADC_AutoZero_Point)
        LDI     R31, (ADC_AutoZero_Point) >> 8
        ST      Z, R16
        STD     Z+1, R17
//  128     __enable_interrupt();
        SEI
//  129     EEP_AutoZero_ADC_Point = ADC_AutoZero_Point;
        LDI     R30, LOW(ADC_AutoZero_Point)
        LDI     R31, (ADC_AutoZero_Point) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        LDI     R20, LOW(EEP_AutoZero_ADC_Point)
        LDI     R21, (EEP_AutoZero_ADC_Point) >> 8
          CFI FunCall __eeput16_16
        CALL    __eeput16_16
//  130 
//  131 
//  132 
//  133 
//  134   }
//  135   
//  136   //Display_Delay_Cnt=0;
//  137   //Display_Mode=D_AutoZero_Mode;
//  138 
//  139 }
??System_Interval_Auto_Zero_Function_0:
        RET
          CFI EndBlock cfiBlock6
//  140 
//  141 
//  142 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//  143 uint8_t Sys_AZ_Interval_Timer_Reg;
Sys_AZ_Interval_Timer_Reg:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//  144 uint16_t Sys_AZ_Interval_1S_Timer_Cnt;
Sys_AZ_Interval_1S_Timer_Cnt:
        DS8 2

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//  145 uint16_t Sys_AZ_Interval_Timer_Cnt;
Sys_AZ_Interval_Timer_Cnt:
        DS8 2
//  146 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//  147 uint8_t Sys_AZ_Interval_Flag;
Sys_AZ_Interval_Flag:
        DS8 1
//  148 

        RSEG CODE:CODE:NOROOT(1)
//  149 void Sys_AZ_Interval_Timer_Stop(void)
Sys_AZ_Interval_Timer_Stop:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function Sys_AZ_Interval_Timer_Stop
          CFI NoCalls
//  150 {
//  151 
//  152   Sys_AZ_Interval_1S_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  153   Sys_AZ_Interval_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  154   Sys_AZ_Interval_Timer_Reg=0;
        LDI     R16, 0
        STS     Sys_AZ_Interval_Timer_Reg, R16
//  155 
//  156 }
        RET
          CFI EndBlock cfiBlock7
//  157 

        RSEG CODE:CODE:NOROOT(1)
//  158 void Sys_AZ_Interval_Timer_Start(void)
Sys_AZ_Interval_Timer_Start:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function Sys_AZ_Interval_Timer_Start
          CFI NoCalls
//  159 {
//  160 
//  161   Sys_AZ_Interval_1S_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  162   Sys_AZ_Interval_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  163   Sys_AZ_Interval_Timer_Reg=1;
        LDI     R16, 1
        STS     Sys_AZ_Interval_Timer_Reg, R16
//  164 
//  165 }
        RET
          CFI EndBlock cfiBlock8
//  166 

        RSEG CODE:CODE:NOROOT(1)
//  167 void Sys_AZ_Interval_Timer(void)
Sys_AZ_Interval_Timer:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function Sys_AZ_Interval_Timer
//  168 {
//  169 
//  170 
//  171   /* Make 1 Minute Timer */
//  172   if(Sys_AZ_Interval_Timer_Reg==1){
        LDS     R16, Sys_AZ_Interval_Timer_Reg
        CPI     R16, 1
        BRNE    ??Sys_AZ_Interval_Timer_0
//  173 
//  174 
//  175     Sys_AZ_Interval_Timer_Cnt++;
        LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        SUBI    R16, 255
        SBCI    R17, 255
        ST      Z, R16
        STD     Z+1, R17
//  176     if(Sys_AZ_Interval_Timer_Cnt>5000){
        LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        CPI     R16, 137
        LDI     R18, 19
        CPC     R17, R18
        BRCS    ??Sys_AZ_Interval_Timer_1
//  177 
//  178       Sys_AZ_Interval_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  179       Sys_AZ_Interval_1S_Timer_Cnt++;
        LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        SUBI    R16, 255
        SBCI    R17, 255
        ST      Z, R16
        STD     Z+1, R17
//  180 
//  181     }
//  182     
//  183     // Complete 1 Hour Timer 
//  184     if(Sys_AZ_Interval_1S_Timer_Cnt>3600){ // 60*60= 3600
??Sys_AZ_Interval_Timer_1:
        LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        CPI     R16, 17
        LDI     R18, 14
        CPC     R17, R18
        BRCS    ??Sys_AZ_Interval_Timer_0
//  185 
//  186       Sys_AZ_Interval_1S_Timer_Cnt=0;
        LDI     R30, LOW(Sys_AZ_Interval_1S_Timer_Cnt)
        LDI     R31, (Sys_AZ_Interval_1S_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//  187       //Sys_AZ_Interval_Timer_Reg=2; 
//  188       Sys_AZ_Interval_Flag=1;
        LDI     R16, 1
        STS     Sys_AZ_Interval_Flag, R16
//  189       Sys_AZ_Interval_Timer_Start();
          CFI FunCall Sys_AZ_Interval_Timer_Start
        RCALL   Sys_AZ_Interval_Timer_Start
//  190       //Sys_Run_Access_Enable=0;
//  191     }
//  192 
//  193   }
//  194 
//  195 }
??Sys_AZ_Interval_Timer_0:
        RET
          CFI EndBlock cfiBlock9
//  196 
//  197 
//  198 

        RSEG CODE:CODE:NOROOT(1)
//  199 void System_Operation(void)
System_Operation:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function System_Operation
//  200 {
//  201 
//  202 
//  203   if(System_Initialize_Timer_Reg==1){
        LDS     R16, System_Initialize_Timer_Reg
        CPI     R16, 1
        BRNE    ??System_Operation_0
//  204 
//  205     if(Start_Switch_State==KEY_COMPLETE_STATE){
        LDS     R16, Start_Switch_State
        CPI     R16, 2
        BRNE    ??System_Operation_1
//  206       if(Sys_Run_Access_Enable==0){
        LDS     R16, Sys_Run_Access_Enable
        TST     R16
        BRNE    ??System_Operation_2
//  207         System_Auto_Zero_Function();
          CFI FunCall System_Auto_Zero_Function
        RCALL   System_Auto_Zero_Function
//  208         Sys_Run_Access_Enable=1;
        LDI     R16, 1
        STS     Sys_Run_Access_Enable, R16
//  209         Sys_AZ_Delay_Timer_Start();
          CFI FunCall Sys_AZ_Delay_Timer_Start
        RCALL   Sys_AZ_Delay_Timer_Start
//  210 
//  211       }
//  212 
//  213       Sys_AZ_Interval_Timer_Reg=1;
??System_Operation_2:
        LDI     R16, 1
        STS     Sys_AZ_Interval_Timer_Reg, R16
//  214 
//  215       if(Sys_AZ_Interval_Flag==1){
        LDS     R16, Sys_AZ_Interval_Flag
        CPI     R16, 1
        BRNE    ??System_Operation_3
//  216         Sys_AZ_Interval_Flag=0;
        LDI     R16, 0
        STS     Sys_AZ_Interval_Flag, R16
//  217 
//  218         System_Interval_Auto_Zero_Function();
          CFI FunCall System_Interval_Auto_Zero_Function
        RCALL   System_Interval_Auto_Zero_Function
//  219 
//  220       }
//  221 
//  222 
//  223       System_Mode = S_Run_Mode;
??System_Operation_3:
        LDI     R16, 1
        STS     System_Mode, R16
        RET
//  224     }
//  225     else {
//  226 
//  227       /* 1 Minute Timer Complete & Start Signal Off */
//  228       if(Sys_AZ_Delay_Timer_Reg==2)
??System_Operation_1:
        LDS     R16, Sys_AZ_Delay_Timer_Reg
        CPI     R16, 2
        BRNE    ??System_Operation_4
//  229         Sys_Run_Access_Enable=0;
        LDI     R16, 0
        STS     Sys_Run_Access_Enable, R16
//  230 
//  231       /* Stop 1 Hour Timer */
//  232       Sys_AZ_Interval_Timer_Stop();
??System_Operation_4:
          CFI FunCall Sys_AZ_Interval_Timer_Stop
        RCALL   Sys_AZ_Interval_Timer_Stop
//  233 
//  234       System_Mode = S_Stop_Mode;
        LDI     R16, 2
        STS     System_Mode, R16
//  235     }
//  236 
//  237   
//  238   }
//  239 
//  240 }
??System_Operation_0:
        RET
          CFI EndBlock cfiBlock10

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
//  241 
//  242 
// 
// 566 bytes in segment CODE
//   4 bytes in segment EEPROM_N
//   6 bytes in segment INITTAB
//  15 bytes in segment NEAR_Z
// 
// 566 bytes of CODE  memory (+ 6 bytes shared)
//  15 bytes of DATA  memory
//   4 bytes of XDATA memory
//
//Errors: none
//Warnings: none
