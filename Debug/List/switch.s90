///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR      11/Jun/2021  12:51:10
// Copyright 1996-2019 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for Atmel AVR
//
//    Source file  =  
//        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c
//    Command line =  
//        -f C:\Users\troub\AppData\Local\Temp\EW23C0.tmp
//        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c"
//        --cpu=m168pa -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1.
//        Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj"
//        -lC "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List" -lA
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List"
//        --initializers_in_flash --no_cse --no_inline --no_code_motion
//        --no_cross_call --no_clustering --no_tbaa --debug -e -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4.
//        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\min_driver\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4.
//        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\atmel_driver\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\" -I
//        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\" --eeprom_size 512
//        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
//        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
//    Locale       =  Korean_KOR.949
//    List file    =  
//        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
//        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List\switch.s90
//
///////////////////////////////////////////////////////////////////////////////

        NAME switch

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega168PA"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__dlib_full_locale_support", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"
        RTMODEL "__vtable_memory", "__nearflash"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC Start_Port_Value
        PUBLIC Start_Switch_State
        PUBLIC Switch_Hold_Get_Delay
        PUBLIC Switch_Hold_Timer_Cnt
        PUBLIC Switch_Hold_Timer_Reg
        PUBLIC Switch_Start_Check
        PUBLIC Switch_Timer
        PUBWEAK _A_PINB
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
// C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\switch.c
//    1 #include "include.h"

        ASEGN ABSOLUTE:DATA:NOROOT,023H
// union <unnamed> volatile __io _A_PINB
_A_PINB:
        DS8 1
//    2 
//    3 
//    4 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//    5 uint8_t Start_Switch_State, Start_Port_Value;
Start_Switch_State:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
Start_Port_Value:
        DS8 1
//    6 
//    7 
//    8 //#if MCU_TYPE
//    9 
//   10 #define PORT_START_SWITCH 0x10 // PB4 
//   11 
//   12 
//   13 //#else 
//   14 
//   15 
//   16 //#define PORT_START_SWITCH 0x10 // PB4 
//   17 
//   18 //#endif
//   19 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   20 uint8_t Switch_Hold_Timer_Reg;
Switch_Hold_Timer_Reg:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   21 uint16_t Switch_Hold_Timer_Cnt;
Switch_Hold_Timer_Cnt:
        DS8 2
//   22 
//   23 
//   24 
//   25 
//   26 
//   27 /*! \brief Switch_Get_Delay() rutine
//   28  *   to prohibit chattering comfirm value one more time
//   29  *   KEY_INIT_STATE : NO VALUE
//   30  *   KEY_READY_STATE : Get Value
//   31  *   KEY_COMPLETE_STATE : Comfirm Value 
//   32  */

        RSEG CODE:CODE:NOROOT(1)
//   33 uint8_t Switch_Hold_Get_Delay(uint8_t Key_Mask_Unit,// PIN MAP
Switch_Hold_Get_Delay:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function Switch_Hold_Get_Delay
          CFI NoCalls
//   34                                   uint8_t Key_Value, // current Pin Value
//   35                                   uint8_t Key_State) // Switch_x_State
//   36 {
//   37 
//   38   if((Key_Value&Key_Mask_Unit)!=Key_Mask_Unit)// if input Key value
        AND     R17, R16
        CP      R17, R16
        BREQ    ??Switch_Hold_Get_Delay_0
//   39   {
//   40     switch (Key_State){
        MOV     R16, R18
        SUBI    R16, 0
        BREQ    ??Switch_Hold_Get_Delay_1
        SUBI    R16, 2
        BREQ    ??Switch_Hold_Get_Delay_2
        SUBI    R16, 3
        BREQ    ??Switch_Hold_Get_Delay_3
        DEC     R16
        BREQ    ??Switch_Hold_Get_Delay_4
        RJMP    ??Switch_Hold_Get_Delay_5
//   41     case KEY_INIT_STATE: Key_State=KEY_HIGH_READY_STATE; break;
??Switch_Hold_Get_Delay_1:
        LDI     R18, 5
        RJMP    ??Switch_Hold_Get_Delay_2
//   42     case KEY_HIGH_READY_STATE: Key_State=KEY_COMPLETE_STATE; break;
??Switch_Hold_Get_Delay_3:
        LDI     R18, 2
        RJMP    ??Switch_Hold_Get_Delay_2
//   43     case KEY_COMPLETE_STATE: break;// Key Input Complete
//   44     case KEY_LOW_READY_STATE : Key_State=KEY_COMPLETE_STATE; break;
??Switch_Hold_Get_Delay_4:
        LDI     R18, 2
        RJMP    ??Switch_Hold_Get_Delay_2
//   45     default :
//   46       Key_State=KEY_INIT_STATE;
??Switch_Hold_Get_Delay_5:
        LDI     R18, 0
//   47       break;
        RJMP    ??Switch_Hold_Get_Delay_2
//   48     }
//   49   }
//   50   else { // if no any key value
//   51     switch (Key_State){
??Switch_Hold_Get_Delay_0:
        MOV     R16, R18
        SUBI    R16, 0
        BREQ    ??Switch_Hold_Get_Delay_2
        SUBI    R16, 2
        BREQ    ??Switch_Hold_Get_Delay_6
        SUBI    R16, 3
        BREQ    ??Switch_Hold_Get_Delay_7
        DEC     R16
        BREQ    ??Switch_Hold_Get_Delay_8
        RJMP    ??Switch_Hold_Get_Delay_9
//   52     case KEY_INIT_STATE:  break;
//   53     case KEY_HIGH_READY_STATE: Key_State=KEY_INIT_STATE; break;
??Switch_Hold_Get_Delay_7:
        LDI     R18, 0
        RJMP    ??Switch_Hold_Get_Delay_2
//   54     case KEY_COMPLETE_STATE: Key_State=KEY_LOW_READY_STATE; break;// Key Input Complete
??Switch_Hold_Get_Delay_6:
        LDI     R18, 6
        RJMP    ??Switch_Hold_Get_Delay_2
//   55     case KEY_LOW_READY_STATE : Key_State=KEY_INIT_STATE; break;
??Switch_Hold_Get_Delay_8:
        LDI     R18, 0
        RJMP    ??Switch_Hold_Get_Delay_2
//   56     default :
//   57       Key_State=KEY_INIT_STATE;
??Switch_Hold_Get_Delay_9:
        LDI     R18, 0
//   58       break;
//   59     }
//   60 
//   61 
//   62   } 
//   63 
//   64   return Key_State;
??Switch_Hold_Get_Delay_2:
        MOV     R16, R18
        RET
//   65 }
          CFI EndBlock cfiBlock0
//   66   
//   67 

        RSEG CODE:CODE:NOROOT(1)
//   68 void Switch_Start_Check(void)
Switch_Start_Check:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function Switch_Start_Check
//   69 {
//   70   Start_Port_Value = (PINB&PORT_START_SWITCH);
        IN      R16, 0x03
        ANDI    R16, 0x10
        STS     Start_Port_Value, R16
//   71   Start_Switch_State = Switch_Hold_Get_Delay(PORT_START_SWITCH,
//   72                                             Start_Port_Value,
//   73                                             Start_Switch_State);
        LDS     R18, Start_Switch_State
        LDS     R17, Start_Port_Value
        LDI     R16, 16
          CFI FunCall Switch_Hold_Get_Delay
        RCALL   Switch_Hold_Get_Delay
        STS     Start_Switch_State, R16
//   74 }
        RET
          CFI EndBlock cfiBlock1
        REQUIRE _A_PINB
//   75 

        RSEG CODE:CODE:NOROOT(1)
//   76 void Switch_Timer(void)
Switch_Timer:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function Switch_Timer
//   77 {
//   78 
//   79   Switch_Hold_Timer_Cnt++;
        LDI     R30, LOW(Switch_Hold_Timer_Cnt)
        LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        SUBI    R16, 255
        SBCI    R17, 255
        ST      Z, R16
        STD     Z+1, R17
//   80   if(Switch_Hold_Timer_Cnt>1000){ // 1000x0.1ms = 100ms
        LDI     R30, LOW(Switch_Hold_Timer_Cnt)
        LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        CPI     R16, 233
        LDI     R18, 3
        CPC     R17, R18
        BRCS    ??Switch_Timer_0
//   81     Switch_Hold_Timer_Cnt=0;
        LDI     R30, LOW(Switch_Hold_Timer_Cnt)
        LDI     R31, (Switch_Hold_Timer_Cnt) >> 8
        LDI     R16, 0
        ST      Z, R16
        LDI     R16, 0
        STD     Z+1, R16
//   82     Switch_Start_Check();
          CFI FunCall Switch_Start_Check
        RCALL   Switch_Start_Check
//   83   }
//   84 
//   85 
//   86   /*
//   87   if(Start_Switch_State==KEY_COMPLETE_STATE)// �⵿ ��ȣ�� ������ 
//   88     System_Mode=S_Run_Mode;
//   89   else System_Mode=S_Stop_Mode; // �⵿ ��ȣ�� ������ 
//   90 */
//   91 }
??Switch_Timer_0:
        RET
          CFI EndBlock cfiBlock2

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
//   92 
// 
//   1 byte  in segment ABSOLUTE
// 154 bytes in segment CODE
//   6 bytes in segment INITTAB
//   5 bytes in segment NEAR_Z
// 
// 154 bytes of CODE memory (+ 6 bytes shared)
//   5 bytes of DATA memory (+ 1 byte  shared)
//
//Errors: none
//Warnings: none
