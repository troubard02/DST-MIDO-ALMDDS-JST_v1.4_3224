###############################################################################
#
# IAR C/C++ Compiler V7.20.4.1567 for Microchip AVR       11/Jun/2021  12:51:10
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Atmel AVR
#
#    Source file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\ps-33d.c
#    Command line =  
#        -f C:\Users\troub\AppData\Local\Temp\EW2380.tmp
#        ("C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\ps-33d.c"
#        --cpu=m168pa -ms -o "C:\Users\troub\CloudStation\Github\GitHub_DST\1.
#        Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj"
#        -lC "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List" -lA
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List"
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug -e -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\min_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4.
#        MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\drivers\atmel_driver\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\" -I
#        "C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\" --eeprom_size 512
#        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" -Ol)
#    Locale       =  Korean_KOR.949
#    List file    =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\List\ps-33d.lst
#    Object file  =  
#        C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke
#        System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Debug\Obj\ps-33d.r90
#
###############################################################################

C:\Users\troub\CloudStation\Github\GitHub_DST\1. Remove Smoke System\4. MIDO\DST-MIDO-ALMDDS-JST_v1.4_3224\Source\ps-33d.c
      1          #include "include.h"
      2          
      3          
      4          

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
      5          uint8_t Twi_Write_Buf[10]={0x98,0xAA};
   \                     Twi_Write_Buf:
   \   00000000                      DS8 10
   \   0000000A                      REQUIRE `?<Initializer for Twi_Write_Buf>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
      6          uint8_t Twi_Read_Buf[10]={0x99,0x00};
   \                     Twi_Read_Buf:
   \   00000000                      DS8 10
   \   0000000A                      REQUIRE `?<Initializer for Twi_Read_Buf>`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      7          uint8_t Twi_Data_Buf[10];
   \                     Twi_Data_Buf:
   \   00000000                      DS8 10
      8          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
      9          uint8_t Twi_Delay_Timer_Reg;
   \                     Twi_Delay_Timer_Reg:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     10          uint16_t Twi_Delay_Timer_Cnt;
   \                     Twi_Delay_Timer_Cnt:
   \   00000000                      DS8 2
     11          
     12          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     13          uint32_t Twi_Raw_Value;
   \                     Twi_Raw_Value:
   \   00000000                      DS8 4
     14          

   \                                 In  segment CODE, align 2, keep-with-next
     15          void Twi_Timer(void)
   \                     Twi_Timer:
     16          {
     17            if(Twi_Delay_Timer_Reg==1){
   \   00000000   9100....           LDS     R16, Twi_Delay_Timer_Reg
   \   00000004   3001               CPI     R16, 1
   \   00000006   F4C9               BRNE    ??Twi_Timer_0
     18              Twi_Delay_Timer_Cnt++;
   \   00000008   ....               LDI     R30, LOW(Twi_Delay_Timer_Cnt)
   \   0000000A   ....               LDI     R31, (Twi_Delay_Timer_Cnt) >> 8
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   5F0F               SUBI    R16, 255
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   8300               ST      Z, R16
   \   00000016   8311               STD     Z+1, R17
     19              if(Twi_Delay_Timer_Cnt>60){
   \   00000018   ....               LDI     R30, LOW(Twi_Delay_Timer_Cnt)
   \   0000001A   ....               LDI     R31, (Twi_Delay_Timer_Cnt) >> 8
   \   0000001C   8100               LD      R16, Z
   \   0000001E   8111               LDD     R17, Z+1
   \   00000020   330D               CPI     R16, 61
   \   00000022   E020               LDI     R18, 0
   \   00000024   0712               CPC     R17, R18
   \   00000026   F048               BRCS    ??Twi_Timer_0
     20                Twi_Delay_Timer_Cnt=0;
   \   00000028   ....               LDI     R30, LOW(Twi_Delay_Timer_Cnt)
   \   0000002A   ....               LDI     R31, (Twi_Delay_Timer_Cnt) >> 8
   \   0000002C   E000               LDI     R16, 0
   \   0000002E   8300               ST      Z, R16
   \   00000030   E000               LDI     R16, 0
   \   00000032   8301               STD     Z+1, R16
     21                Twi_Delay_Timer_Reg=2;
   \   00000034   E002               LDI     R16, 2
   \   00000036   9300....           STS     Twi_Delay_Timer_Reg, R16
     22              }
     23            }
     24          }
   \                     ??Twi_Timer_0:
   \   0000003A   9508               RET
     25          

   \                                 In  segment CODE, align 2, keep-with-next
     26          void TWI_Operation(void)
   \                     TWI_Operation:
     27          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
     28            TWI_Start_Transceiver_With_Data(Twi_Write_Buf,2);
   \   00000004   E022               LDI     R18, 2
   \   00000006   ....               LDI     R16, LOW(Twi_Write_Buf)
   \   00000008   ....               LDI     R17, (Twi_Write_Buf) >> 8
   \   0000000A   ........           CALL    TWI_Start_Transceiver_With_Data
     29            Twi_Delay_Timer_Reg=1;
   \   0000000E   E001               LDI     R16, 1
   \   00000010   9300....           STS     Twi_Delay_Timer_Reg, R16
     30            while(Twi_Delay_Timer_Reg){
   \                     ??TWI_Operation_0:
   \   00000014   9100....           LDS     R16, Twi_Delay_Timer_Reg
   \   00000018   2300               TST     R16
   \   0000001A   F021               BREQ    ??TWI_Operation_1
     31            
     32              if(Twi_Delay_Timer_Reg==2)break;
   \   0000001C   9100....           LDS     R16, Twi_Delay_Timer_Reg
   \   00000020   3002               CPI     R16, 2
   \   00000022   F7C1               BRNE    ??TWI_Operation_0
     33            }
     34            TWI_Start_Transceiver_With_Data(Twi_Read_Buf,5);
   \                     ??TWI_Operation_1:
   \   00000024   E025               LDI     R18, 5
   \   00000026   ....               LDI     R16, LOW(Twi_Read_Buf)
   \   00000028   ....               LDI     R17, (Twi_Read_Buf) >> 8
   \   0000002A   ........           CALL    TWI_Start_Transceiver_With_Data
     35            while(TWI_Transceiver_Busy());                // Wait until TWI is ready for next transmission.
   \                     ??TWI_Operation_2:
   \   0000002E   ........           CALL    TWI_Transceiver_Busy
   \   00000032   2300               TST     R16
   \   00000034   F7E1               BRNE    ??TWI_Operation_2
     36          
     37            for(uint16_t i=0;i<5;i++)
   \   00000036   E080               LDI     R24, 0
   \   00000038   E090               LDI     R25, 0
   \   0000003A   C009               RJMP    ??TWI_Operation_3
     38              Twi_Data_Buf[i]=TWI_buf[i];
   \                     ??TWI_Operation_4:
   \   0000003C   01FC               MOVW    R31:R30, R25:R24
   \   0000003E   ....               SUBI    R30, LOW((-(TWI_buf) & 0xFFFF))
   \   00000040   ....               SBCI    R31, (-(TWI_buf) & 0xFFFF) >> 8
   \   00000042   8100               LD      R16, Z
   \   00000044   01FC               MOVW    R31:R30, R25:R24
   \   00000046   ....               SUBI    R30, LOW((-(Twi_Data_Buf) & 0xFFFF))
   \   00000048   ....               SBCI    R31, (-(Twi_Data_Buf) & 0xFFFF) >> 8
   \   0000004A   8300               ST      Z, R16
   \   0000004C   9601               ADIW    R25:R24, 1
   \                     ??TWI_Operation_3:
   \   0000004E   3085               CPI     R24, 5
   \   00000050   E000               LDI     R16, 0
   \   00000052   0790               CPC     R25, R16
   \   00000054   F398               BRCS    ??TWI_Operation_4
     39          
     40            __disable_interrupt();
   \   00000056   94F8               CLI
     41            Twi_Raw_Value = Twi_Data_Buf[2];
   \   00000058   9100....           LDS     R16, (Twi_Data_Buf + 2)
   \   0000005C   E010               LDI     R17, 0
   \   0000005E   E020               LDI     R18, 0
   \   00000060   E030               LDI     R19, 0
   \   00000062   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   00000064   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   00000066   8300               ST      Z, R16
   \   00000068   8311               STD     Z+1, R17
   \   0000006A   8322               STD     Z+2, R18
   \   0000006C   8333               STD     Z+3, R19
     42            Twi_Raw_Value = (Twi_Raw_Value<<8)+Twi_Data_Buf[3];
   \   0000006E   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   00000070   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   00000072   8140               LD      R20, Z
   \   00000074   8151               LDD     R21, Z+1
   \   00000076   8162               LDD     R22, Z+2
   \   00000078   2F76               MOV     R23, R22
   \   0000007A   2F65               MOV     R22, R21
   \   0000007C   2F54               MOV     R21, R20
   \   0000007E   E040               LDI     R20, 0
   \   00000080   9100....           LDS     R16, (Twi_Data_Buf + 3)
   \   00000084   E010               LDI     R17, 0
   \   00000086   E020               LDI     R18, 0
   \   00000088   E030               LDI     R19, 0
   \   0000008A   0F40               ADD     R20, R16
   \   0000008C   1F51               ADC     R21, R17
   \   0000008E   1F62               ADC     R22, R18
   \   00000090   1F73               ADC     R23, R19
   \   00000092   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   00000094   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   00000096   8340               ST      Z, R20
   \   00000098   8351               STD     Z+1, R21
   \   0000009A   8362               STD     Z+2, R22
   \   0000009C   8373               STD     Z+3, R23
     43            Twi_Raw_Value = (Twi_Raw_Value<<8)+Twi_Data_Buf[4];
   \   0000009E   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   000000A0   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   000000A2   8140               LD      R20, Z
   \   000000A4   8151               LDD     R21, Z+1
   \   000000A6   8162               LDD     R22, Z+2
   \   000000A8   2F76               MOV     R23, R22
   \   000000AA   2F65               MOV     R22, R21
   \   000000AC   2F54               MOV     R21, R20
   \   000000AE   E040               LDI     R20, 0
   \   000000B0   9100....           LDS     R16, (Twi_Data_Buf + 4)
   \   000000B4   E010               LDI     R17, 0
   \   000000B6   E020               LDI     R18, 0
   \   000000B8   E030               LDI     R19, 0
   \   000000BA   0F40               ADD     R20, R16
   \   000000BC   1F51               ADC     R21, R17
   \   000000BE   1F62               ADC     R22, R18
   \   000000C0   1F73               ADC     R23, R19
   \   000000C2   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   000000C4   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   000000C6   8340               ST      Z, R20
   \   000000C8   8351               STD     Z+1, R21
   \   000000CA   8362               STD     Z+2, R22
   \   000000CC   8373               STD     Z+3, R23
     44            __enable_interrupt();
   \   000000CE   9478               SEI
     45            
     46          }
   \   000000D0   9189               LD      R24, Y+
   \   000000D2   9199               LD      R25, Y+
   \   000000D4   9508               RET
     47          
     48          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     49          int16_t Scale_Zero_Set_1_Value,Scale_Span_Set_1_Value;
   \                     Scale_Zero_Set_1_Value:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Scale_Span_Set_1_Value:
   \   00000000                      DS8 2
     50          
     51          #define SCALE_ZERO_SET_1 -1000
     52          #define SCALE_SPAN_SET_1 1000
     53          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     54          float Cal_Pressure_1_Coef,Cal_Pressure_2_Coef,Cal_Pressure_3_Coef;
   \                     Cal_Pressure_1_Coef:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Cal_Pressure_2_Coef:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Cal_Pressure_3_Coef:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     55          int32_t ADC_Zero_Set_1_Point,ADC_Span_Set_1_Point;
   \                     ADC_Zero_Set_1_Point:
   \   00000000                      DS8 4

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ADC_Span_Set_1_Point:
   \   00000000                      DS8 4
     56          
     57          #define ADC_ZERO_SET_1  2516582
     58          #define ADC_SPAN_SET_1 14260633
     59          
     60          
     61          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     62          int16_t Pressure_PA_Value;
   \                     Pressure_PA_Value:
   \   00000000                      DS8 2
     63          

   \                                 In  segment CODE, align 2, keep-with-next
     64          void Twi_Adc_Push_Coef(void)
   \                     Twi_Adc_Push_Coef:
     65          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
     66            Scale_Zero_Set_1_Value = SCALE_ZERO_SET_1;
   \   00000004   ....               LDI     R30, LOW(Scale_Zero_Set_1_Value)
   \   00000006   ....               LDI     R31, (Scale_Zero_Set_1_Value) >> 8
   \   00000008   E108               LDI     R16, 24
   \   0000000A   EF1C               LDI     R17, 252
   \   0000000C   8300               ST      Z, R16
   \   0000000E   8311               STD     Z+1, R17
     67            Scale_Span_Set_1_Value = SCALE_SPAN_SET_1;
   \   00000010   ....               LDI     R30, LOW(Scale_Span_Set_1_Value)
   \   00000012   ....               LDI     R31, (Scale_Span_Set_1_Value) >> 8
   \   00000014   EE08               LDI     R16, 232
   \   00000016   E013               LDI     R17, 3
   \   00000018   8300               ST      Z, R16
   \   0000001A   8311               STD     Z+1, R17
     68          
     69            ADC_Zero_Set_1_Point = ADC_ZERO_SET_1;
   \   0000001C   ....               LDI     R30, LOW(ADC_Zero_Set_1_Point)
   \   0000001E   ....               LDI     R31, (ADC_Zero_Set_1_Point) >> 8
   \   00000020   E606               LDI     R16, 102
   \   00000022   E616               LDI     R17, 102
   \   00000024   E226               LDI     R18, 38
   \   00000026   E030               LDI     R19, 0
   \   00000028   8300               ST      Z, R16
   \   0000002A   8311               STD     Z+1, R17
   \   0000002C   8322               STD     Z+2, R18
   \   0000002E   8333               STD     Z+3, R19
     70            ADC_Span_Set_1_Point = ADC_SPAN_SET_1;
   \   00000030   ....               LDI     R30, LOW(ADC_Span_Set_1_Point)
   \   00000032   ....               LDI     R31, (ADC_Span_Set_1_Point) >> 8
   \   00000034   E909               LDI     R16, 153
   \   00000036   E919               LDI     R17, 153
   \   00000038   ED29               LDI     R18, 217
   \   0000003A   E030               LDI     R19, 0
   \   0000003C   8300               ST      Z, R16
   \   0000003E   8311               STD     Z+1, R17
   \   00000040   8322               STD     Z+2, R18
   \   00000042   8333               STD     Z+3, R19
     71          
     72            Cal_Pressure_1_Coef = (float)(Scale_Span_Set_1_Value-Scale_Zero_Set_1_Value)
     73              /((int32_t)ADC_Span_Set_1_Point - (int32_t)ADC_Zero_Set_1_Point);
   \   00000044   ....               LDI     R30, LOW(Scale_Span_Set_1_Value)
   \   00000046   ....               LDI     R31, (Scale_Span_Set_1_Value) >> 8
   \   00000048   8100               LD      R16, Z
   \   0000004A   8111               LDD     R17, Z+1
   \   0000004C   ....               LDI     R30, LOW(Scale_Zero_Set_1_Value)
   \   0000004E   ....               LDI     R31, (Scale_Zero_Set_1_Value) >> 8
   \   00000050   8120               LD      R18, Z
   \   00000052   8131               LDD     R19, Z+1
   \   00000054   1B02               SUB     R16, R18
   \   00000056   0B13               SBC     R17, R19
   \   00000058   2F21               MOV     R18, R17
   \   0000005A   0F22               LSL     R18
   \   0000005C   0B22               SBC     R18, R18
   \   0000005E   2F32               MOV     R19, R18
   \   00000060   ........           CALL    ?SL2F_L04
   \   00000064   01C8               MOVW    R25:R24, R17:R16
   \   00000066   01D9               MOVW    R27:R26, R19:R18
   \   00000068   ....               LDI     R30, LOW(ADC_Span_Set_1_Point)
   \   0000006A   ....               LDI     R31, (ADC_Span_Set_1_Point) >> 8
   \   0000006C   8100               LD      R16, Z
   \   0000006E   8111               LDD     R17, Z+1
   \   00000070   8122               LDD     R18, Z+2
   \   00000072   8133               LDD     R19, Z+3
   \   00000074   ....               LDI     R30, LOW(ADC_Zero_Set_1_Point)
   \   00000076   ....               LDI     R31, (ADC_Zero_Set_1_Point) >> 8
   \   00000078   8140               LD      R20, Z
   \   0000007A   8151               LDD     R21, Z+1
   \   0000007C   8162               LDD     R22, Z+2
   \   0000007E   8173               LDD     R23, Z+3
   \   00000080   1B04               SUB     R16, R20
   \   00000082   0B15               SBC     R17, R21
   \   00000084   0B26               SBC     R18, R22
   \   00000086   0B37               SBC     R19, R23
   \   00000088   ........           CALL    ?SL2F_L04
   \   0000008C   01A8               MOVW    R21:R20, R17:R16
   \   0000008E   01B9               MOVW    R23:R22, R19:R18
   \   00000090   018C               MOVW    R17:R16, R25:R24
   \   00000092   019D               MOVW    R19:R18, R27:R26
   \   00000094   ........           CALL    ?F_DIV_L04
   \   00000098   ....               LDI     R30, LOW(Cal_Pressure_1_Coef)
   \   0000009A   ....               LDI     R31, (Cal_Pressure_1_Coef) >> 8
   \   0000009C   8300               ST      Z, R16
   \   0000009E   8311               STD     Z+1, R17
   \   000000A0   8322               STD     Z+2, R18
   \   000000A2   8333               STD     Z+3, R19
     74          }
   \   000000A4   E0E4               LDI     R30, 4
   \   000000A6   ........           JMP     ?EPILOGUE_B4_L09
     75          
     76          

   \                                 In  segment CODE, align 2, keep-with-next
     77          int16_t Twi_Adc_Cal_Real_Value(int32_t value,
   \                     Twi_Adc_Cal_Real_Value:
     78                                               int32_t ADC_Zero_Set_Point,
     79                                               int16_t Scale_Zero_Set_Value,
     80                                               float Cal_Pressure_Coff)
     81          {
     82            
     83            int16_t Real_Value;
     84            __disable_interrupt();
   \   00000000   94F8               CLI
     85            Real_Value = (int32_t)(((int32_t)value-(int32_t)ADC_Zero_Set_Point) 
     86                               * Cal_Pressure_Coff);
   \   00000002   1B04               SUB     R16, R20
   \   00000004   0B15               SBC     R17, R21
   \   00000006   0B26               SBC     R18, R22
   \   00000008   0B37               SBC     R19, R23
   \   0000000A   ........           CALL    ?SL2F_L04
   \   0000000E   814A               LDD     R20, Y+2
   \   00000010   815B               LDD     R21, Y+3
   \   00000012   816C               LDD     R22, Y+4
   \   00000014   817D               LDD     R23, Y+5
   \   00000016   ........           CALL    ?F_MUL_L04
   \   0000001A   ........           CALL    ?F2SL_L04
     87            Real_Value = Scale_Zero_Set_Value + Real_Value;    
   \   0000001E   8128               LD      R18, Y
   \   00000020   8139               LDD     R19, Y+1
   \   00000022   0F02               ADD     R16, R18
   \   00000024   1F13               ADC     R17, R19
     88            __enable_interrupt();  
   \   00000026   9478               SEI
     89          
     90            return Real_Value;
   \   00000028   9626               ADIW    R29:R28, 6
   \   0000002A   9508               RET
     91          
     92          }
     93          

   \                                 In  segment CODE, align 2, keep-with-next
     94          void Twi_Adc_Get_Pressure_Sensor_Value(void)
   \                     Twi_Adc_Get_Pressure_Sensor_Value:
     95          {
     96            Pressure_PA_Value = Twi_Adc_Cal_Real_Value(Twi_Raw_Value,
     97                                                   ADC_Zero_Set_1_Point,
     98                                                   Scale_Zero_Set_1_Value,
     99                                                   Cal_Pressure_1_Coef);
   \   00000000   ....               LDI     R30, LOW(Cal_Pressure_1_Coef)
   \   00000002   ....               LDI     R31, (Cal_Pressure_1_Coef) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   8111               LDD     R17, Z+1
   \   00000008   8122               LDD     R18, Z+2
   \   0000000A   8133               LDD     R19, Z+3
   \   0000000C   933A               ST      -Y, R19
   \   0000000E   932A               ST      -Y, R18
   \   00000010   931A               ST      -Y, R17
   \   00000012   930A               ST      -Y, R16
   \   00000014   ....               LDI     R30, LOW(Scale_Zero_Set_1_Value)
   \   00000016   ....               LDI     R31, (Scale_Zero_Set_1_Value) >> 8
   \   00000018   8100               LD      R16, Z
   \   0000001A   8111               LDD     R17, Z+1
   \   0000001C   931A               ST      -Y, R17
   \   0000001E   930A               ST      -Y, R16
   \   00000020   ....               LDI     R30, LOW(ADC_Zero_Set_1_Point)
   \   00000022   ....               LDI     R31, (ADC_Zero_Set_1_Point) >> 8
   \   00000024   8140               LD      R20, Z
   \   00000026   8151               LDD     R21, Z+1
   \   00000028   8162               LDD     R22, Z+2
   \   0000002A   8173               LDD     R23, Z+3
   \   0000002C   ....               LDI     R30, LOW(Twi_Raw_Value)
   \   0000002E   ....               LDI     R31, (Twi_Raw_Value) >> 8
   \   00000030   8100               LD      R16, Z
   \   00000032   8111               LDD     R17, Z+1
   \   00000034   8122               LDD     R18, Z+2
   \   00000036   8133               LDD     R19, Z+3
   \   00000038   ....               RCALL   Twi_Adc_Cal_Real_Value
   \   0000003A   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   0000003C   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   0000003E   8300               ST      Z, R16
   \   00000040   8311               STD     Z+1, R17
    100          
    101            __disable_interrupt();
   \   00000042   94F8               CLI
    102            Real_Pressure_Value = Pressure_PA_Value - ADC_AutoZero_Point;
   \   00000044   ....               LDI     R30, LOW(Pressure_PA_Value)
   \   00000046   ....               LDI     R31, (Pressure_PA_Value) >> 8
   \   00000048   8100               LD      R16, Z
   \   0000004A   8111               LDD     R17, Z+1
   \   0000004C   ....               LDI     R30, LOW(ADC_AutoZero_Point)
   \   0000004E   ....               LDI     R31, (ADC_AutoZero_Point) >> 8
   \   00000050   8120               LD      R18, Z
   \   00000052   8131               LDD     R19, Z+1
   \   00000054   1B02               SUB     R16, R18
   \   00000056   0B13               SBC     R17, R19
   \   00000058   ....               LDI     R30, LOW(Real_Pressure_Value)
   \   0000005A   ....               LDI     R31, (Real_Pressure_Value) >> 8
   \   0000005C   8300               ST      Z, R16
   \   0000005E   8311               STD     Z+1, R17
    103          
    104            
    105            __enable_interrupt();
   \   00000060   9478               SEI
    106          }
   \   00000062   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for Twi_Write_Buf>`:
   \   00000000   AA9800000000       DC8 152, 170, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for Twi_Read_Buf>`:
   \   00000000   009900000000       DC8 153, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
    107          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      2      2   TWI_Operation
        2      2   -> TWI_Start_Transceiver_With_Data
        2      2   -> TWI_Transceiver_Busy
      6      2   Twi_Adc_Cal_Real_Value
        6      2 ?F2SL_L04
        6      2 ?F_MUL_L04
        6      2 ?SL2F_L04
      6      2   Twi_Adc_Get_Pressure_Sensor_Value
        0      2   -> Twi_Adc_Cal_Real_Value
      4      2   Twi_Adc_Push_Coef
        4      2 ?F_DIV_L04
        4      2 ?SL2F_L04
      0      2   Twi_Timer


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      10  ?<Initializer for Twi_Read_Buf>
      10  ?<Initializer for Twi_Write_Buf>
       4  ADC_Span_Set_1_Point
       4  ADC_Zero_Set_1_Point
       4  Cal_Pressure_1_Coef
       4  Cal_Pressure_2_Coef
       4  Cal_Pressure_3_Coef
       2  Pressure_PA_Value
       2  Scale_Span_Set_1_Value
       2  Scale_Zero_Set_1_Value
     214  TWI_Operation
      44  Twi_Adc_Cal_Real_Value
     100  Twi_Adc_Get_Pressure_Sensor_Value
     170  Twi_Adc_Push_Coef
      10  Twi_Data_Buf
       2  Twi_Delay_Timer_Cnt
       1  Twi_Delay_Timer_Reg
       4  Twi_Raw_Value
      10  Twi_Read_Buf
      60  Twi_Timer
      10  Twi_Write_Buf
      12  -- Other

 
 588 bytes in segment CODE
  12 bytes in segment INITTAB
  20 bytes in segment NEAR_I
  20 bytes in segment NEAR_ID
  43 bytes in segment NEAR_Z
 
 608 bytes of CODE memory (+ 12 bytes shared)
  63 bytes of DATA memory

Errors: none
Warnings: none
